@model IEnumerable<FODUN.Reservas.Models.Alojamiento>

@{
    ViewData["Title"] = "Alojamientos";
}

@using Microsoft.AspNetCore.Identity
@using FODUN.Reservas.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    // Obtener el usuario actual y verificar si es administrador
    var usuario = SignInManager.IsSignedIn(User) ? await UserManager.GetUserAsync(User) : null;
    var esAdministrador = usuario != null && await UserManager.IsInRoleAsync(usuario, "Administrador");
}

<h1 class="mb-4">
    <i class="fas fa-bed"></i> Alojamientos
</h1>

@if (esAdministrador)
{
    <p>
        <a asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus-circle"></i> Crear Nuevo Alojamiento
        </a>
    </p>
}

<div class="input-group mb-3">
    <div class="input-group-prepend">
        <span class="input-group-text"><i class="fas fa-search"></i></span>
    </div>
    <input type="text" id="searchInput" class="form-control" placeholder="Buscar por nombre, tipo o ubicación..." aria-label="Buscar" />
</div>
<br />

<div class="table-responsive">
    <table class="table table-striped table-hover" id="alojamientosTable">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Nombre)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Descripcion)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TipoAlojamiento)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CapacidadMaximaPersonas)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Ubicacion)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Activo)
                </th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nombre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Descripcion)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TipoAlojamiento)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CapacidadMaximaPersonas)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Ubicacion.Nombre)
                    </td>
                    <td>
                        @if (item.Activo)
                        {
                            <span class="badge badge-success"><i class="fas fa-check-circle"></i> Sí</span>
                        }
                        else
                        {
                            <span class="badge badge-danger"><i class="fas fa-times-circle"></i> No</span>
                        }
                    </td>
                    <td>
                        @if (esAdministrador)
                        {
                            <a asp-action="Edit" asp-route-id="@item.AlojamientoId" class="btn btn-info btn-sm" title="Editar">
                                <i class="fas fa-edit"></i>
                            </a>
                        }
                        <a asp-action="Details" asp-route-id="@item.AlojamientoId" class="btn btn-secondary btn-sm" title="Detalles">
                            <i class="fas fa-info-circle"></i>
                        </a>
                        @if (esAdministrador)
                        {
                            <a asp-action="Delete" asp-route-id="@item.AlojamientoId" class="btn btn-danger btn-sm" title="Eliminar">
                                <i class="fas fa-trash-alt"></i>
                            </a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha512-..." crossorigin="anonymous" referrerpolicy="no-referrer" />

    <script>
        // Función para normalizar cadenas (quitar tildes )
        function normalizeText(text) {
            return text.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
        }

        $(document).ready(function () {
            $("#searchInput").on("keyup", function () {
                var searchValue = normalizeText($(this).val().toLowerCase());

                $("#alojamientosTable tbody tr").filter(function () {
                    var rowText = normalizeText($(this).text().toLowerCase());
                    $(this).toggle(rowText.indexOf(searchValue) > -1);
                });
            });
        });
    </script>
}